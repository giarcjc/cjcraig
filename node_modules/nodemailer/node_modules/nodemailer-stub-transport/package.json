{
  "name": "nodemailer-stub-transport",
  "version": "1.0.0",
  "description": "Stub transport for Nodemailer",
  "main": "src/stub-transport.js",
  "scripts": {
    "test": "grunt"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/andris9/nodemailer-stub-transport.git"
  },
  "keywords": [
    "Stub",
    "Nodemailer"
  ],
  "author": {
    "name": "Andris Reinman"
  },
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/andris9/nodemailer-stub-transport/issues"
  },
  "homepage": "http://github.com/andris9/nodemailer-stub-transport",
  "dependencies": {},
  "devDependencies": {
    "chai": "~2.2.0",
    "grunt": "~0.4.5",
    "grunt-contrib-jshint": "~0.11.1",
    "grunt-mocha-test": "~0.12.7",
    "sinon": "^1.14.1"
  },
  "readme": "# Stub transport module for Nodemailer\n\nApplies for Nodemailer v1.0\n\nStub transport does not send anything, it builds the mail stream into a single Buffer and returns it with the sendMail callback. This is useful for testing the emails before actually sending anything.\n\n## Usage\n\nInstall with npm\n\n    npm install nodemailer-stub-transport\n\nRequire to your script\n\n```javascript\nvar nodemailer = require('nodemailer');\nvar stubTransport = require('nodemailer-stub-transport');\n```\n\nCreate a Nodemailer transport object\n\n```javascript\nvar transport = nodemailer.createTransport(stubTransport());\n```\n\nSend a message\n\n```javascript\ntransport.sendMail(mailData, function(err, info){\n    console.log(info.response.toString());\n});\n```\n\n## Errors\n\nThere's not much to error about but if you want the sending to fail and return an error then you can do this by specifying an error option when setting up the transport\n.\n\n```javascript\nvar transport = nodemailer.createTransport(stubTransport({\n    error: new Error('Invalid recipient')\n}));\ntransport.sendMail(mailData, function(err, info){\n    console.log(err.message); // 'Invalid recipient'\n});\n```\n\n### Events\n\n#### 'log'\n\nDebug log object with `{name, version, level, type, message}`\n\n#### 'envelope'\n\nEnvelope object\n\n#### 'data'\n\nData chunk\n\n## License\n\n**MIT**\n",
  "readmeFilename": "README.md",
  "_id": "nodemailer-stub-transport@1.0.0",
  "dist": {
    "shasum": "abd30ddb9f65e4479679a034e067fede277119ac"
  },
  "_from": "nodemailer-stub-transport@^1.0.0",
  "_resolved": "https://registry.npmjs.org/nodemailer-stub-transport/-/nodemailer-stub-transport-1.0.0.tgz"
}
